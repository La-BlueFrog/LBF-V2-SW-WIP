/*******************************************************************************
 * Detect_Swipe_Gesture.c
 * 
 * Author: La BlueFrog, 2015
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 * 
 *************************************************************************/


#include "LBF_Global.h"
#include "User_Configuration.h"


// ===================================================
// "Swipe" definition used here :
// 1- uncovered to covered at < SWIPE_MAX_DIST  (say 5cm)
// AND
// 2- covered to uncovered after SWIPE_MAX_DURATION   (say 200ms)
// ====================================================

#define SWIPE_MAX_DIST 100  // mm
#define SWIPE_MAX_DUR  1000  // ms


boolean_t Detect_Swipe_Gesture(void)
{

boolean_t  SwipeDetected = FALSE;
uint8_t    Distance_mm;
boolean_t  Covered = FALSE;
static boolean_t  PreviousCovered = FALSE;
   // -- Set VL6180X for Single Shot Range Measurement 
static uint32_t FirstStepTime;


    // Set bits [2:0] of Reg.0x14 to 0b100: enable internal IT on sample ready
    I2C2_WriteSingleReg (VL6180X_CHIPID, 0x0014, 0x4);
//!!!!!!!!!! MOVE to main init (also for DistEval() )

    // Launch a measurement: write 0x01 to 0x18  
    I2C2_WriteSingleReg (VL6180X_CHIPID, 0x0018, 0x1);
    // Wait until bits [2:0] of Reg.0x4F are 0b100 (measurement complete)
//    while( (I2C2_ReadSingleReg(VL6180X_CHIPID, 0x004F) & 0x07) != 0x4 );
    while( (I2C2_ReadSingleReg(VL6180X_CHIPID, 0x004F) & 0x07) == 0x0 );
    // Read distance ("range value") in mm from Reg.0x0062
    Distance_mm = I2C2_ReadSingleReg(VL6180X_CHIPID, 0x0062);
    // Set bits [2:0] of Reg.0x15 to 0b111  (clear all interrupts)
    I2C2_WriteSingleReg (VL6180X_CHIPID, 0x0015, 0x7);
    // So, is there something close-by ?
    Covered=  (Distance_mm < SWIPE_MAX_DIST );

    if (Covered && !PreviousCovered)  // first step - gets covered
    {
	FirstStepTime = HAL_GetTick();
    }
    if (!Covered && PreviousCovered)  // second step -gets uncovered
    {
        // has it been uncovered sufficiently soon to consider it's a swipe ?
        SwipeDetected = ( ( HAL_GetTick() - FirstStepTime) < SWIPE_MAX_DUR ) ;
       
    }

    PreviousCovered = Covered ;

    return SwipeDetected ;
}  




/***************************************************************END OF FILE****/// UncovToCov_Seen
